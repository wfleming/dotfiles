#!/bin/sh
# adapted from @maxjacobson:
# https://github.com/maxjacobson/dotfiles/blob/master/bin/git-cleanup-branches
set -e

file=$(mktemp)
trap 'rm "$file"' TERM

removeCurrentBranch() {
  sed -E '/\*/d'
}

leftTrim() {
  sed -E 's/\*?[[:space:]]+//'
}

all_branches=$(git branch | removeCurrentBranch | leftTrim)

# write branches to file
for branch in $all_branches; do
  printf "keep %s\n" "$branch" >> "$file"
done

# write instructions to file
cat <<EOF >> "$file"

# All of your branches are listed above,
# (except for the current branch, which you can't delete).
# Change keep to d to delete the branch.
# All other lines are ignored.
EOF

# prompt user to edit file
$EDITOR "$file"

# check each line of the file
cat "$file" | while read -r line; do

  # if the line starts with "d "
  if printf "%s" "$line" | grep --extended-regexp "^d " > /dev/null; then
    # delete the branch
    branch=$(printf "%s" "$line" | sed -E 's/^d //')

    git branch -D "$branch"
  fi
done
