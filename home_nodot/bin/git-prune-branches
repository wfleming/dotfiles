#!/bin/sh
#
# pbrisbin 2015 - prune branches already merged into master
#
###
set -e

default_branch="$(git default-branch)"
if ! git branch | grep --quiet "^\* $default_branch\$"; then
  git checkout "$default_branch"
fi

git pull

delete_branch() {
  branch="$1"
  if git branch --delete --force "$branch"; then
    if git branch --remotes | grep --quiet --fixed-strings "origin/$branch"; then
      git push origin ":$branch" # delete the remote branch
    fi
  fi
}

# easy cases first - merged branches
git branch --merged "$default_branch" | grep --invert-match "^\* $default_branch\$" | while read branch; do
  echo "$branch was merged, deleting (pointed at $(git rev-parse --short $branch))"
  delete_branch "$branch"
done

# harder cases - rebases or cherry-picks or what have you
git branch | grep --invert-match "^\* $default_branch\$" | while read branch; do
  # https://stackoverflow.com/questions/61398539/list-branches-which-have-been-merged-by-rebase/74852078#74852078
  if ! git range-diff --right-only "origin/$default_branch...$branch" | grep --quiet -- "---- > "; then
    echo "$branch is fully contained in $default_branch, deleting (pointed at $(git rev-parse --short $branch))"
    delete_branch "$branch"
  fi
done
