#!/bin/sh
#
# Formats a boot disk for arch linux installer + my own setup scripts.
#
# See https://wiki.archlinux.org/index.php/Archiso
# Dependencies: archiso
#
# Usage: sudo ./mkboot /path/to/dev
set -e

dev=$1
mkboot_dir=$(dirname $(readlink -f $0))

echo "This will re-format ${dev}, you could lose data! Enter y to continue:"
read confirm
if [ $confirm != 'y' ]; then
  echo "aborting"
  exit 0
fi

# 1. Copy the stock profile

mkdir -p ./profile/
cp -r /usr/share/archiso/configs/releng/* ./profile/

# 2. add new files to the iso

echo "== adding contents to iso filesystem"
(
  cd ./profile/airootfs

  mkdir -p installer
  cp --archive ${mkboot_dir}/setup* ./installer/

  echo "==== copying ~ files"
  mkdir -p installer/home
  cp --archive \
    /home/will/.ssh \
    /home/will/.aws \
    /home/will/.docker \
    /home/will/.password-store \
    ./installer/home/

  mkdir -p ./installer/home/.config/
  cp --archive \
    /home/will/.config/spotify \
    /home/will/.config/Slack \
    ./installer/home/.config/
  rm -rf ./installer/home/.config/Slack/GPUCache \
    ./installer/home/.config/Slack/Cache \
    "./installer/home/.config/Slack/Code Cache" \
    ./installer/home/.config/Slack/logs \
    ./installer/home/.config/Slack/VideoDecodeStats

  mkdir -p ./installer/home/.local/share/
  cp --archive /home/will/.local/share/wallpapers ./installer/home/.local/share/

  mkdir -p installer/var/lib/
  cp --archive /var/lib/iwd ./installer/var/lib/
)

# 3. build the iso

echo "== Building the ISO"
[ -d ./work ] && rm -r ./work
[ -d ./out ] && rm -r ./out
mkarchiso -v ./profile

new_iso_path=$(ls ./out/*.iso | head -1)
echo "== Writing ${new_iso_path} to ${dev}"
dd if="${new_iso_path}" of="${dev}" bs=4M

echo "== Done!"
echo "==== The new ISO is still at ${new_iso_path} - you can delete it now if you don't want it"
echo "==== You can now boot the new machine from ${dev}."
echo "==== See 'setup' for further instructions"
